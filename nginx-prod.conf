server {
    listen 443 ssl;
    server_name aidep.cn www.aidep.cn;
    ssl_certificate /etc/nginx/aidep.cn_bundle.crt;
    #请填写私钥文件的相对路径或绝对路径
    ssl_certificate_key /etc/nginx/aidep.cn.key;
    ssl_session_timeout 5m;
    #请按照以下协议配置
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
    #请按照以下套件配置，配置加密套件，写法遵循 openssl 标准。
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;
    ssl_prefer_server_ciphers on;

    # 调整缓冲区设置
    proxy_buffers 16 8k;           # 使用 16 个 8k 缓冲区
    proxy_buffer_size 4k;          # 每个缓冲区的大小为 4k
    proxy_busy_buffers_size 64k;   # 设置忙碌缓冲区大小为 64k
    proxy_max_temp_file_size 128m; # 设置最大临时文件大小为 128MB
    proxy_buffering off;           # 禁用缓冲，直接将响应发送给客户端

    location = / {
        return 302 $scheme://$server_name/web-b/;
    }

    # Django 后端服务
    location / {
        proxy_pass http://web:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # WebSocket 服务
    location /ws {
        proxy_pass http://web:8000/ws;  # 假设 'web' 是 Django 容器名
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_read_timeout 3600s;
        proxy_send_timeout 3600s;
        proxy_connect_timeout 3600s;
        proxy_buffering off;
    }

    # H5 应用的静态文件路径
    location /web/ {
        alias /usr/share/nginx/html/web/;
        index index.html;
        try_files $uri $uri/ /web/index.html;
    }

    location /web-b/ {
        alias /usr/share/nginx/html/web-b/;
        index index.html;
        try_files $uri $uri/ /web/index.html;
    }

    # 静态文件和媒体文件配置
    location /static/ {
        alias /app/static/;
    }

    location /media/ {
        alias /app/media/;
    }
}
